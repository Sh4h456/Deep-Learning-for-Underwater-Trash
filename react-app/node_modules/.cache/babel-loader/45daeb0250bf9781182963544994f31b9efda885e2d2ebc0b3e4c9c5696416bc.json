{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khans\\\\Downloads\\\\Dummy\\\\FinalProject\\\\react-app\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header';\nimport ControlsPanel from '../components/ControlsPanel';\nimport ResultsPanel from '../components/ResultsPanel';\nimport ChatWidget from '../components/ChatWidget';\nimport ModelInsights from '../components/ModelInsights';\nimport DetectionSummary from '../components/DetectionSummary';\n// --- 1. IMPORT BOTH API FUNCTIONS ---\nimport { predictImage, predictVideo } from '../api/predict';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  // --- 2. MANAGE THE SELECTED FILE STATE HERE ---\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [predictionResult, setPredictionResult] = useState(null); // Renamed from 'result' for clarity\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // --- 3. NEW HANDLER FOR FILE SELECTION FROM ControlsPanel ---\n  const handleFileChange = file => {\n    setSelectedFile(file);\n    setPredictionResult(null); // Clear previous results when a new file is chosen\n    setError(null);\n  };\n\n  // --- 4. UPDATED DETECTION LOGIC ---\n  const handleDetect = async () => {\n    if (!selectedFile) {\n      setError(\"Please select a file first.\");\n      return;\n    }\n    setPredictionResult(null);\n    setIsLoading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      let data;\n      // Check the file type to call the correct API\n      if (selectedFile.type.startsWith('video/')) {\n        const videoData = await predictVideo(formData);\n        // Standardize the result object for the ResultsPanel\n        data = {\n          type: 'video',\n          url: videoData.processed_video_url\n        };\n      } else {\n        const imageData = await predictImage(formData);\n        // Standardize the result object\n        data = {\n          type: 'image',\n          ...imageData\n        };\n      }\n      setPredictionResult(data);\n    } catch (err) {\n      setError(err.message || \"Detection failed. Please try again.\");\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-gray-100 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"p-4 md:p-8 grid grid-cols-1 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-1 space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(ControlsPanel, {\n          selectedFile: selectedFile,\n          onFileChange: handleFileChange,\n          onDetect: handleDetect,\n          isLoading: isLoading,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModelInsights, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(ResultsPanel, {\n          result: predictionResult,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), predictionResult && predictionResult.type === 'image' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DetectionSummary, {\n            summary: predictionResult.prediction_summary,\n            title: \"Prediction Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), predictionResult.ground_truth_summary && /*#__PURE__*/_jsxDEV(DetectionSummary, {\n            summary: predictionResult.ground_truth_summary,\n            title: \"Ground Truth Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWidget, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ngGNM0SznQZhxtbwMFYx1Xt49H8=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Header","ControlsPanel","ResultsPanel","ChatWidget","ModelInsights","DetectionSummary","predictImage","predictVideo","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","selectedFile","setSelectedFile","predictionResult","setPredictionResult","isLoading","setIsLoading","error","setError","handleFileChange","file","handleDetect","formData","FormData","append","data","type","startsWith","videoData","url","processed_video_url","imageData","err","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileChange","onDetect","result","summary","prediction_summary","title","ground_truth_summary","_c","$RefreshReg$"],"sources":["C:/Users/khans/Downloads/Dummy/FinalProject/react-app/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport ControlsPanel from '../components/ControlsPanel';\r\nimport ResultsPanel from '../components/ResultsPanel';\r\nimport ChatWidget from '../components/ChatWidget';\r\nimport ModelInsights from '../components/ModelInsights';\r\nimport DetectionSummary from '../components/DetectionSummary'; \r\n// --- 1. IMPORT BOTH API FUNCTIONS ---\r\nimport { predictImage, predictVideo } from '../api/predict';\r\n\r\nexport default function Dashboard() {\r\n  // --- 2. MANAGE THE SELECTED FILE STATE HERE ---\r\n  const [selectedFile, setSelectedFile] = useState(null); \r\n  const [predictionResult, setPredictionResult] = useState(null); // Renamed from 'result' for clarity\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // --- 3. NEW HANDLER FOR FILE SELECTION FROM ControlsPanel ---\r\n  const handleFileChange = (file) => {\r\n    setSelectedFile(file);\r\n    setPredictionResult(null); // Clear previous results when a new file is chosen\r\n    setError(null);\r\n  };\r\n\r\n  // --- 4. UPDATED DETECTION LOGIC ---\r\n  const handleDetect = async () => {\r\n    if (!selectedFile) {\r\n      setError(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    setPredictionResult(null);\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      let data;\r\n      // Check the file type to call the correct API\r\n      if (selectedFile.type.startsWith('video/')) {\r\n        const videoData = await predictVideo(formData);\r\n        // Standardize the result object for the ResultsPanel\r\n        data = { \r\n          type: 'video', \r\n          url: videoData.processed_video_url \r\n        };\r\n      } else {\r\n        const imageData = await predictImage(formData);\r\n        // Standardize the result object\r\n        data = { \r\n          type: 'image', \r\n          ...imageData \r\n        };\r\n      }\r\n      setPredictionResult(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Detection failed. Please try again.\");\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 font-sans\">\r\n      <Header />\r\n      <main className=\"p-4 md:p-8 grid grid-cols-1 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\">\r\n        \r\n        <div className=\"lg:col-span-1 space-y-8\">\r\n          {/* --- 5. PASS THE NEW STATE AND HANDLERS TO ControlsPanel --- */}\r\n          <ControlsPanel\r\n            selectedFile={selectedFile}\r\n            onFileChange={handleFileChange}\r\n            onDetect={handleDetect}\r\n            isLoading={isLoading}\r\n            error={error}\r\n          />\r\n          <ModelInsights />\r\n        </div>\r\n        \r\n        <div className=\"lg:col-span-2 space-y-8\">\r\n          <ResultsPanel result={predictionResult} isLoading={isLoading} />\r\n          \r\n          {/* --- 6. ENSURE SUMMARIES ONLY SHOW FOR IMAGE RESULTS --- */}\r\n          {predictionResult && predictionResult.type === 'image' && (\r\n            <>\r\n              <DetectionSummary \r\n                summary={predictionResult.prediction_summary} \r\n                title=\"Prediction Summary\" \r\n              />\r\n              {predictionResult.ground_truth_summary && (\r\n                <DetectionSummary \r\n                  summary={predictionResult.ground_truth_summary} \r\n                  title=\"Ground Truth Summary\" \r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n      </main>\r\n      <ChatWidget />\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}